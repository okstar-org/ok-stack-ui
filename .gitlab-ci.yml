image: node:latest

variables:
  DOCKER_DRIVER: overlay2
  GIT_STRATEGY: "fetch"
  PACK_NAME: 'dist/ng-matero'
  DEPLOYMENT_NODE: "192.168.1.6"

stages:
  - install
  # - lint
  # - unit
  # - clear
  - build
  - pack
  # - push
  - deploy

cache:
    policy: pull
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - dist/ng-matero
      - node_modules/
      - .eslintcache


# 创建一个锚，'template'
.template: &templateDef
  only:
    - master
    - release
    - develop

job-install:
  stage: install
  <<: *templateDef
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - node_modules
  script:
    - yarn config list
    - yarn config delete proxy
    - yarn config set registry http://repo.hncstech.com.cn/repository/npm-group/
    # - yarn config set registry https://registry.npm.taobao.org
    - yarn install #--network-timeout 60000

# job-lint:
#   stage: lint
#   <<: *templateDef
#   script:
#     - npm run lint

# job-unit:
#   stage: unit
#   <<: *templateDef
#   script:
#     - npm run unit
# job-clear:
#   stage: clear
#   <<: *templateDef
#   script:
#     - npm run clean

job-build-pre:
  stage: build
  <<: *templateDef
  only:
    - develop
  script:
    - echo 'build for develop ...'
    - ls
  variables:
    DEPLOYMENT_NODE: "192.168.1.6"

job-build-pre:
  stage: build
  <<: *templateDef
  only:
    - release
  script:
    - echo 'build for release ...'
    - ls
  variables:
    DEPLOYMENT_NODE: "192.168.1.6"

job-build:
  stage: build
  <<: *templateDef
  script:
    - npm run build

job-pack:
  stage: pack
  <<: *templateDef
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - $CI_PROJECT_NAME.tar
  script:
    - ls
    - tar -cvf $CI_PROJECT_NAME.tar $PACK_NAME

job-deploy:
  stage: deploy
  script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - touch ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh-keyscan $DEPLOYMENT_NODE >> ~/.ssh/known_hosts
    - scp $CI_PROJECT_NAME.tar ubuntu@$DEPLOYMENT_NODE:~
    - ssh ubuntu@$DEPLOYMENT_NODE "test -d /var/www/$CI_PROJECT_NAME || sudo mkdir /var/www/$CI_PROJECT_NAME"
    - ssh ubuntu@$DEPLOYMENT_NODE "sudo tar -xvf $CI_PROJECT_NAME.tar -C /var/www/$CI_PROJECT_NAME"

